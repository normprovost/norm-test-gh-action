name: Norm Test Workflow

on:
  pull_request: {}

jobs:
  generate_results:
    name: Generate results
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
       results: ${{ steps.setmatrix.outputs.results }}
    steps:
      - name: Set Dynamic Matrix
        uses: actions/github-script@v6
        id: setmatrix
        with:
          script: |
            result_string = '[{"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","path":"index.js","line":1},{"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","path":"index.js","line":1},{"message":"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities","path":"index.js","line":1}]'
            core.setOutput('results', result_string)
            # console.log('::set-output name=results::' + result_string)
  comment_on_results:
    if: github.event_name == 'pull_request'
    needs: generate_results
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate_results.outputs.results) }}
      max-parallel: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Comment on file
        uses: actions/github-script@v6
        env:
          SHA: '${{ github.event.pull_request.head.sha }}'
          MESSAGE: ${{ matrix.message }}
          LINE: ${{ matrix.line }}
        with:
          script: |
            const {SHA, MESSAGE, LINE} = process.env
            const fs = require('fs');

            const body = `HEY :wave: \n\n ${MESSAGE} \n\n @normprovost`;
            const path = 'index.js';
            const line = parseInt(`${LINE}`);
            github.rest.pulls.createReviewComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: body,
              commit_id: `${SHA}`,
              path: path,
              line: line
            });